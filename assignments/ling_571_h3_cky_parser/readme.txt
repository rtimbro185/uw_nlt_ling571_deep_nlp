###############################################################################################################
#Ling 571 - Deep Processing Techniques for NLP
#Winter 2016
#Homework #3: Due January 19, 2016
#URL: http://courses.washington.edu/ling571/ling571_WIN2016/hw/hw3/hw3.html
#URL: http://courses.washington.edu/ling571/ling571_WIN2016/slides/HW2.pdf
#Author: Ryan Timbrook
#Date: 01/26/2016
#
#Goals:
#   Explore issues in parser design for natural language processing.
#   Employ key programming concepts such as dynamic programming to create (relatively) efficient parsing algorithms.
#   Improve your understanding of the CKY algorithm through implementation.
#
#Requirements:
#   Develop an implementation of the CKY algorithm that will parse input sentences using a CNF grammar
#       *The algorithm must return all parses derived for the input sentences given the grammar.
#       *The program you submit should do the following:
#           Load the CNF grammar.
#           Read in the example sentences.
#           For each example sentence, output to a file:
#               -the sentence itself
#               -the simple bracketed structure parse(s) based on your implementation of the CKY algorithm, and
#               -the number of parses for that sentence
#           *Test Grammar Start symbol: TOP
#           *Parse should span input and be rooted at TOP
#
#   Programming
#       Create a program named hw3_parser.{py|pl|etc} to perform CKY parsing as described above invoked as:
#            hw3_parser.{py|pl|etc} <grammar_filename> <test_sentence_filename> <output_filename>
#        where:
#            <grammar_filename> is the name of the file holding grammar rules in the NLTK .cfg format in Chomsky Normal Form.
#            <test_sentence_filename> is the name of the file containing test sentences to parse with your algorithm.
#            <output_filename> is the name of the file where your system will write the parses and their counts over the test sentences.
#   Verification & Parse Comparison
#
#
##########################################################################################################################################################################

#############################################################################################################
#               Describe Work:
#
#   Problems Encountered?
#
#       How?
#       Insights?
#       Special Features?
#
#   Leasons Learned:
#
#
#       Examples:
#
#
#   Were there parts of the project not able to be completed?
#
#       Why?
#
#       What was tried and/or what didn't work?
#
#   Discussion: Parses generated by the original grammar and those from the converted CNF grammar, smiliarities and differences
#
#
########################################################################################################################################
